/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
#define DEFAULT 0
#define SYM     1
#define NUM     2
#define NAV     3
#define UTIL    4

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
    behaviors {
        rpht: rightpositional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "POSITIONAL_HOLD_TAPR";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <1 2 3 4 5 12 13 14 15 17 16 24 25 26 27 28 29>;    // <---[[the W key]]
        };
        lpht: leftpositional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "POSITIONAL_HOLD_TAPL";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <212>;
            quick-tap-ms = <0>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35>;
        };
        
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
// --------------------------------------------- Colemak - DH -------------------------------------------
// | ESC |  Q  |  W  |  F  |  P  |  B  |                             |  J  |  L  |  U  |  Y  |  '  | BSPC|
// | CTR |  A  |  R  |  S  |  T  |  G  |                             |  M  |  N  |  E  |  I  |  O  | CTR |
// |     |  Z  |  X  |  C  |  D  |  V  |  TAB   |     |  |     |     |  K  |  H  |  ,  |  .  |  /  | _   |
//                   | cap | SHT | NUM |  ALT   | SYM |  |     | RET | SPC | SHT |     |

            label = "Default";

            bindings = <
    &gresc     &kp Q &kp W &kp F          &kp P        &kp B                                        &kp J         &kp L        &kp U          &kp Y   &kp APOS &kp BSPC
    &kp LCTRL  &kp A &kp R &lpht LSHIFT S &lpht LALT T &kp G                                        &kp M         &rpht RALT N &rpht RSHIFT E &kp I   &kp O    &kp RCTRL
    &trans     &kp Z &kp X &kp C          &kp D        &kp V   &kp TAB   &trans  &trans &trans      &kp K         &kp H        &kp COMMA      &kp DOT &kp FSLH &kp UNDER
                           &caps_word     &kp LSHIFT   &mo NUM &kp LALT  &mo SYM &trans &lt SYM RET &lt NUM SPACE &kp RSHIFT   &trans 
            >;
        };


        sym_layer {
// ------------------------------------------ MODIFIER LAYER -------------------------------------------
// | ESC |  <  |  [  |  {  |  (  |  /  |                           |  \  |  )  |  }  |  ]  |  >  | DEL  |
// | TAB |  #  |  *  |  +  |  _  |  @  |                           |  &  |  -  |  =  |  ^  |  $  |  '  |
// | SFT |  %  |  !  |  `  |  :  |  '  | ESC |     |  | RET |  GUI |  "  |  ;  |  ~  |  ?  |  |  | CTR |
//                   | MUT | TAB | CTR | SFT |     |  | RET |  BSP | DEL | ALT |     |

            label = "Symbols";

            bindings = <
    &kp CARET &kp EXCL  &kp AMPS  &kp LBRC &kp RBRC &kp AT                                    &none &none    &none  &none    &none      &kp DEL
    &kp GRAVE &kp PRCNT &kp COLON &kp LPAR &kp RPAR &kp HASH                                  &none &kp LEFT &kp UP &kp DOWN &kp RIGHT  &none  
    &kp DLLR  &kp PIPE  &kp SEMI  &kp LBKT &kp RBKT &kp STAR &kp TILDE  &kp FSLH  &none &none &none &none    &none  &none    &none      &none  
                                  &trans   &trans   &trans   &kp UNDER  &kp BSLH  &none &none &none &none    &none                             
            >;
        };

        number_layer {
// ------------------------------------------ NUMBER LAYER --------------------------------------------
// | ESC | ESC |  7  |  8  |  9  |  ,  |                          | DWN | RGT |    |     |     |  DEL |
// | TAB | TAB |  4  |  5  |  6  |  0  |                          | LFT | LFT | UP | DWN | RIGHT   |  '  |
// | SFT | CPS |  1  |  2  |  3  |  .  | ESC | SPC |  |     | GUI |  UP | LFT |    |     |     | CTR |
//                   | MUT | TAB | CTR | SFT | SPC |  |     | BSP | DEL | ALT |    |

            label = "Number";

            bindings = <
    &none &none &kp N7 &kp N8 &kp N9 &kp PLUS                           &none &none    &none  &none    &none      &kp DEL
    &none &none &kp N4 &kp N5 &kp N6 &kp EQUAL                          &none &kp LEFT &kp UP &kp DOWN &kp RIGHT  &none
    &none &none &kp N1 &kp N2 &kp N3 &kp MINUS &trans &none &none &none &none &none    &none  &none    &none      &none
                       &none  &none  &kp N0    &trans &none &none &none &none &none    &none
            >;
        };

        utility_layer {
// ----------------------------------------- UTILITY LAYER --------------------------------------------
// | F1  | F2  | F3  | F4  | F5  | F6  |                          | F7  | F8  | F9  | F10 | F11 | F12 |
// | EFF | SPI | BRI | SAI | HUI | TOG |                          | BT0 | BT1 | BT2 | BT3 | BT4 |     |
// | EFR | SPD | BRD | SAD | HUD | PTG | ESC | SPC |  |     | GUI | PTG | NXT | PRV | CLR |     | BTG |
//                   | MUT | TAB | CTR | SFT | SPC |  |     | BSP | DEL | ALT | GMR |

            label = "Utility";

            bindings = <
    &kp F1          &kp F2           &kp F3          &kp F4           &kp F5            &kp F6                                                                       &kp F7            &kp F8       &kp F9       &kp F10      &kp F11      &kp F12
    &trans &trans  &trans &trans  &trans   &trans                                                              &bt BT_SEL 0      &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none
    &trans &trans  &trans &trans  &trans   &ext_power EP_TOG &gresc        &lt SYM SPACE  &lt NUM RET &kp LGUI      &ext_power EP_TOG &bt BT_NXT   &bt BT_PRV   &bt BT_CLR   &trans       &out OUT_TOG
                                                     &kp C_MUTE       &kp TAB           &kp LCTRL         &mt LSHFT TAB &lt SYM SPACE  &lt NUM RET &mt RALT BSPC &kp DEL           &kp LALT     &kp C_PP
            >;
        };          
    };
};
